{"home":{"content":"# Lecture 3/4: CSS in depth\n---\n\nWelcome! Here's a brief breakdown of class today.\n\n#### Learning Objectives\n---\n\n1. Thorough introduction to CSS, the querying language of HTML\n2. Brief introduction to [**BEM**: Block, Element, Modifier](https://en.bem.info/methodology/key-concepts/) technique of CSS writing.\n\n#### Rundown\n---\n\n#### [Warmup](#warmup)\n#### [Specificity](#specificity)\n#### [Practical CSS3 Usecases](#practice-css3-usecases)\n#### [The Box Model](#the-box-model)\n#### [Build a Landing Page](#build-a-landing-page)","idx":0},"title":{"content":"Lecture 3/4: CSS in depth","idx":1},"desc":{"content":"A thorough deep dive into CSS","idx":2},"warmup":{"content":"# Warmup\n---\n\nLet's begin by doing a few practice problems.\n\n\n### Exercises\n---\nHere are the main problems that we will solve.\n\n#### Problem 1\n---\n**[Consider this repo](https://github.com/FEWDMaterials/RelativePathsReview)**.\n\nYou are given several \"websites\". However they are set up in strange configurations! \n\n**For Each Folder**\n\n1. **WITHOUT** rearranging the files, link the proper css folders in the **`HEAD`** section\n2. If you do it right, hovering over the page in the browser will cause it to change colors\n\n#### Problems 2 - 5\n---\n#### Log in to [Samantha](http://samantha.fewd.us/#/) First!\n\nThen, given the following pages, please complete the task outlined.\n\n1. ##### [CSS Tag Selectors](http://samantha.fewd.us/#fork/mottaquikarim/CSS_Tag_Selectors) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/CSS_Tag_Selectors)\n\n2. ##### [CSS Class Selectors](http://samantha.fewd.us/#fork/mottaquikarim/CSS_Class_Selectors_2) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/CSS_Class_Selectors_2)\n\n3. ##### [CSS ID Selectors](http://samantha.fewd.us/#fork/mottaquikarim/CSS_ID_Selectors) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/CSS_ID_Selectors)\n","idx":3},"practical-css3-usecases":{"content":"# Practical CSS3 Usecases\n---\n\nThese are examples of CSS3 uses that we will either cover **today** or **at some point** in the duration of the course.\n\n#### Exercise\n---\nSee if you can implement some of the more simple ones outlined here into one of your websites (either the resume or the Wendy Bite).\n\n#### CSS Use Cases\n---\n\nHere are some interesting use cases where CSS3 in particular becomes super handy.\n\n#### Animations\n---\n\nYou can do some really awesome work with animating your elements.\n\n* **[Spinner](http://fewd.us/howdoi/#/problem/42730)**\n\n* **[Repeating, multiple animations](http://fewd.us/howdoi/#/problem/4270)**\n\n#### Transitions\n---\n\nTransitions are animations that are triggered usually by some form of user interaction.\n\n* **[Hover Effects](http://fewd.us/howdoi/#/problem/4268)**\n\n#### Pseudo Selectors\n---\n\nPsuedo classes allow us to style specific types of element features, **i.e.** the **:hover** pseudo selector can be used to style an element as the user puts his mouse over it.\n\n* **[Menu Hover Effect](http://fewd.us/howdoi/#/problem/4957)**\n\nOther examples of pseudo selectors: **:visited**, **:after**, etc\n\n#### Overflows\n---\n\nKeep track of content and determine how it should behave if there is more content than space in the container.\n\n* **[Overflow Example](http://fewd.us/howdoi/#/problem/4165)**\n\n#### Grids\n---\n\nThis one is super expansive and you could literally teach an entire course on this. For now, take a look at a few examples / problems to gain perspective on this.\n\n* **[Vertically and Horizontally Center](http://fewd.us/jargon/#/problem/10099)**\n\n* **[Three Column Grid](http://fewd.us/howdoi/#/problem/4258)**\n\n* **[Flex Align/Justify](http://fewd.us/jargon/#/problem/10100)**\n\n* **[Flex Direction](http://fewd.us/jargon/#/problem/10097)**\n\n* **[Flex Wrap](http://fewd.us/jargon/#/problem/10098)**\n\n#### References\n---\n1. **[Exhaustive Guide to Flex](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)**\n2. **[CSS Animations Reference](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations)**\n3. \n**[Exhaustive list of CSS properties and values](http://www.w3schools.com/cssref/)**\n4. **[Exhaustive list of CSS3 properties](http://www.tutorialrepublic.com/css-reference/css3-properties.php)**\n","idx":4},"the-box-model":{"content":"# The Box Model\n---\n\nThe Box Model is a way of thinking about CSS DOM elements on the page. Instead of thinking of HTML elements as bits of HTML wrappers we style, we can think of them as boxes with specific dimensions and properties. Given this though, an HTML layout can be thought of as boxes within boxes.\n\n#### Exercises\n---\n\n1. ##### [Display Inline to Block](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Box_Model_Inline_to_block) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Box_Model_Inline_to_block)\n\n2. ##### [Display Block to Inline-Block](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Box_Model_Inline_block_only) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Box_Model_Inline_block_only)\n\n3. ##### [Simple Layouts](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Box_Model_Simple_Layout) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Box_Model_Simple_Layout)\n\n#### Margin, Padding, Border\n---\n\n**Margin**: space in **between** DOM elements\n\n**Padding**: space **within** the DOM element\n\n**Border**: the outline **around** the DOM Element.\n\nIn general, the width of a DOM element is **padding** + **border** + **content**.\n\n#### Implications\n---\nThe main implications of this has to do with building **rows** with multiple tags / items inside of it. \n\nThe widths adding up to 100% isn't enough -- the **width** + **padding** + **border** + **margin** must add up to 100%!\n\n#### Box Sizing\n---\n\nThis is a useful tool. We can use box-sizing to force the padding to be **pulled into** our content width. This way, padding is **not** added to the overall width.\n\n**Types**: content-box, border-box\n\n","idx":5},"build-a-landing-page":{"content":"# Build a Landing Page\n---\n\nOk, activity time. **Let's build a sample landing page using a front-end framework and our current knowledge of CSS.**\n\n#### Options\n---\n\nLet's just choose one of these and get going.\n\nWe must **also** choose **one** of the four frontend frameworks we saw to help us build ou the grids and other UI elements. Or, we can just build from scratch. \n\n**Also note that** we **will** be pushing this to the internet via GitHub + [GitBot](http://gitbot.co).\n\n#### [BaseCamp](https://basecamp.com/)\n\n<p></p>\n\n<img src=\"http://cdn2.hubspot.net/hub/53/hubfs/basecamp-landing-page-example.png?noresize&t=1468231454139&width=660&height=427\" style=\"width: 100%;\">\n\n\n\n#### [Wistia](https://wistia.com/account/signup)\n\n<p></p>\n\n<img src=\"http://cdn2.hubspot.net/hub/53/hubfs/wisita-landing-page-example.png?noresize&t=1468231454139&width=660\" style=\"width: 100%;\">\n\n","idx":6},"specificity":{"content":"# Specificity\n---\n\n**Learning Objective**: what is specificity and how does it work?\n\n\n### Exercises\n---\nHere are the main problems that we will solve.\n\n#### Problem 1\n---\n\n1. ##### [Complex CSS Selectors](http://samantha.fewd.us/#fork/mottaquikarim/Complex_CSS_Selectors) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/Complex_CSS_Selectors)\n\n#### Specificty Rules\n---\n\n**ID Selectors**: Most specific. Overrides everything. **value**: Infinity.\n\n```css\n#this-is-id {\n\n}\n```\n\n**ClassName Selectors**: Less specific than IDs but more specific than tags. **value**: 10.\n\n```css\n.this-is-a-class {\n\n}\n```\n\n**TagName Selectors**: Least specific. **value** 1.\n\n```css\nspan {\n\n}\n```\n\n#### Selector Usecases\n---\n\n**AND selectors**: these selectors work by ANDing. For example:\n\n```css\nspan.foo.bar#bax {\n\n}\n```\n\nLook for **spans** with classes **foo** AND **bar** AND id **bax**.\n\n**Descendant selectors**: these selectors looks for each subsequent search **WITHIN**. For example:\n\n```css\nspan .foo .bar #bax {}\n```\n\nLook for **spans**. Within **each span**, look for class called **foo**. Within **each foo within each span**, look for **bar**. And so on.\n","idx":7},"__list__":["home","title","desc","warmup","practical-css3-usecases","the-box-model","build-a-landing-page","specificity"]}